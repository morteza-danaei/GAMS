{
  "openapi": "3.0.3",
  "info": {
    "title": "Auth API",
    "description": "This API allows you to signup, signin, signout and see the current user.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://example.com/api/users/docs"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "summary": "Sign up a new user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password",
                  "repeat_password",
                  "email"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "description": "The username of the new user."
                  },
                  "password": {
                    "type": "string",
                    
                    "minLength": 8,
                    "maxLength": 64,
                    "description": "The password of the new user."
                  },
                  "repeat_password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "description": "The password of the new user, repeated for confirmation."
                  },
                  "email": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "format": "email",
                    "description": "The email address of the new user."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of the user."
          },
          "username": {
            "type": "string",
            "description": "The username of the user."
          },
          "password": {
            "type": "string",
            "description": "The password of the user."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the user."
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "email has to have a valid email format. password has to be at least 8 characters and include capital,lowercase and special caracters. the repeat_password has to be exactly equal to password."
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location of the validation error (e.g., \"body.username\")."
                },
                "message": {
                  "type": "string",
                  "description": "email has to have a valid email format. password has to be at least 8 characters and include capital,lowercase and special caracters. the repeat_password has to be exactly equal to password."
                }
              }
            }
          }
        }
      }
      
    },
    "/api/users/signin": {
      "post": {
        "summary": "Sign in a  user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username of the  user."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password of the nw user."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed in successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of the user."
          },
          "username": {
            "type": "string",
            "description": "The username of the user."
          },
          "password": {
            "type": "string",
            "description": "The password of the user."
          }
          }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "username and password must be between 8 and 64 characters.  has to have a valid email format. password has to be at least 8 characters ."
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location of the validation error (e.g., \"body.username\")."
                }
              }
            }
          }
        }
      }
      
    }
  }
}